apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // The demo app does not have translations.
        disable 'MissingTranslation'
        abortOnError false
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner rootProject.ext.dependencies["androidJUnitRunner"]
        resConfigs('zh-rCH');
        ndk {
            //设置支持的SO库架构（开发可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi"
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //Android support
    api rootProject.ext.dependencies["appcompat"]
    api rootProject.ext.dependencies["design"]

    //view
    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
    }

    /*网络请求框架*/
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["loggingInterceptor"]

    /*RxJava&RxAndroid*/
    api rootProject.ext.dependencies["rxjava2"]
    api(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    /*RxLifecycle基础库*/
    api rootProject.ext.dependencies["rxlifecycle"]
    api rootProject.ext.dependencies["rxlifecycleAndroid"]
    api rootProject.ext.dependencies["rxlifecycle-components"]

    //toos
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["statusbarutil"]
    api rootProject.ext.dependencies["glide"]
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }


}
